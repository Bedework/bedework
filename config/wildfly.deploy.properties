#
# --------------------------------------------------------------------
#
# Introduction
#
# This file is the defaults for the calendar deployment properties.
# This file (or its localised form) provide properties for the deployment
#and update package.
#
# All properties defined in this file are used at deploy time only.
#
# Properties for all modules are shown below - even if they are not
# being deployed. The globals section defines which modules will be
# deployed as well as some other global properties.
#
# --------------------------------------------------------------------
#             post-deployer properties
#org.bedework.postdeploy.in=./bedework/dist/deployable
#org.bedework.postdeploy.out=${java.io.tmpdir}/bedework/dist/deployableModified
org.bedework.postdeploy.deploy=${org.bedework.global.baseDir}/wildfly/standalone/deployments

# For the quickstart this points at a local directory which gets populated
# with required resources.
# This should be overridden by the run time script to point to a
# location into which the resources have been downloaded.
org.bedework.postdeploy.resource.base=${org.bedework.global.baseDir}/bedework/deployment

# This causes the jboss-service.xml file to be deleted
org.bedework.for.wildfly=true

# --------------------------------------------------------------------
#
# Name the standalone wars we process
org.bedework.war.names=bedework,\
  bw-calendar-xsl-caladminrsrc,\
  bw-calendar-xsl-calfeedrsrc-MainCampus,\
  bw-calendar-xsl-calrsrc-MainCampus,\
  bw-calendar-xsl-calrsrc-SoEDepartmental,\
  bw-calendar-xsl-eventsubmitrsrc,\
  bw-calendar-xsl-ucalrsrc,\
  bw-calendar-xsl-common,\
  bw-calendar-notifyws,\
  bw-calendar-pubcaldav,\
  bw-calendar-publicws,\
  bw-calendar-synchws,\
  bw-calendar-ucaldav,\
  bw-calendar-userws,\
  bw-webclient-cal,\
  bw-webclient-caladmin,\
  bw-webclient-calauth,\
  bw-webclient-demosoe,\
  bw-webclient-feeder,\
  bw-webclient-submit,\
  bw-webclient-ucal,\
  bw-dotwell-known,\
  pubcalwskt,\
  ucalwskt

# --------------------------------------------------------------------
#
# Name the ears we process
org.bedework.ear.names=bedework,bw-carddav,\
  bw-category,bw-event-registration,bw-notifier,\
  bw-sometime,bw-self-registration,bw-synch,\
  bw-timezone-server,bw-xml

org.bedework.ear.template.wars.bw-carddav=bw-carddav-public,bw-carddav-user,bw-carddav-userweb

org.bedework.ear.template.wars.bw-category=bw-category

org.bedework.ear.template.wars.bw-event-registration=event-registration

org.bedework.ear.template.wars.bw-self-registration=self-registration

org.bedework.ear.template.wars.bw-sometime=sched-assist-war

org.bedework.ear.template.wars.bw-synch=bw-synch

org.bedework.ear.template.wars.bw-timezone-server=bw-timezone-server

org.bedework.ear.template.wars.bw-xml=bw-xml-war
#
# --------------------------------------------------------------------
#
# Global options
#
# --------------------------------------------------------------------
#

# --------------------------------------------------------------------
# Application server defs
# --------------------------------------------------------------------

#  where the application server lives
# This you might change to point to another copy of jboss

org.bedework.appserver.dir=${org.bedework.global.baseDir}/wildfly

# --------------------------------------------------------------------
# This block is dependent on the above and you should probably not change these
# This block ends with the comment - end application server settings

# name of jboss configuration we are using
org.bedework.jboss.config=standalone

# location of jboss configuration we are using
org.bedework.jboss.config.dir=${org.bedework.appserver.dir}/${org.bedework.jboss.config}

# where we deploy
org.bedework.appserver.deploy.dir=${org.bedework.jboss.config.dir}/deployments

# confusingly close name - location of jboss configuration directory
org.bedework.jboss.conf.dir=${org.bedework.jboss.config.dir}/configuration

#  where most library files used by all applications go
appserver.lib.dir=${org.bedework.jboss.config.dir}/lib

# where data files go
org.bedework.jboss.data.dir=${org.bedework.jboss.config.dir}/data
# where bedework data files go
org.bedework.data.dir=${org.bedework.jboss.data.dir}/bedework

# the toplevel directory for the server static resources, relative to the application server home
org.bedework.server.resource.root.dir=${org.bedework.appserver.dir}/bedework-content

org.bedework.global.displayname=Bedework

# --------------------------------------------------------------------
# ActiveMQ defs
# --------------------------------------------------------------------

#
org.bedework.global.activemq.jndi-name=java:/jms/BedeworkConnectionFactory

# --------------------------------------------------------------------
# --------------------------------------------------------------------
# --------------------------------------------------------------------
# end application server settings
# --------------------------------------------------------------------
# --------------------------------------------------------------------
# --------------------------------------------------------------------


# ------------------------------------------------------------------------
#                 Application properties
# Each property name is prefixed with "org.bedework.app."
# Following is the ear name, e.g. "bw-cal"
# Following is the app name e.g. "cal"
# Following is the property name e.g. "virtual-hosts"
#
# When a ear is processed - all ear specific properties are converted
# into a set of properties with the prefix "app". For example, when
# processing the ear "bw-cal" a property
#  org.bedework.app.bw-cal.ear.displayname=Main Calendar Engine
# would be converted to the property
#  app.ear.displayname=Main Calendar Engine
# Also all the app specific properties for that ear woul dbe converted
# e.g. from
#  org.bedework.app.bw-cal.cal.virtual-hosts=host1.example.com,host2.example.com
# to
#  app.cal.virtual-hosts=host1.example.com,host2.example.com
# These converted sets of properties are pushed on to a stack of sets
# of properties while processing that ear.
#
# Similarly, when processing a war, the filtered properties are
# filtered again to produce a war specific set. For example when
# processing the war "cal" the conversion would be
# e.g. from
#  app.cal.virtual-hosts=host1.example.com,host2.example.com
# to
#  app.virtual-hosts=host1.example.com,host2.example.com
#

# ------------------------------------------------------------------------
#                 authenticated web sockets; no ear, name pubcalwskt
#
org.bedework.app.bw-dotwell-known.context=/.well-known
